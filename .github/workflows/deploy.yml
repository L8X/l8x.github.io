{
    "name": "Deploy website",
    "on": {
        "schedule": {
            "cron": "54 * * * *", # hourly
        },
    },
    "jobs": {
        "deploy": {
            "name": "Build and deploy",
            "timeout-minutes": 5,
            "runs-on": "ubuntu-latest",
            "steps": [
                {
                    "name": "Checkout website repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "fetch-depth": 1,
                        "ref": "gh-pages",
                        "path": "robloxapi.github.io/ref",
                    },
                },
                {
                    "name": "Checkout documentation repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "repository": "RobloxAPI/doc",
                        "fetch-depth": 1,
                        "ref": "master",
                        "path": "doc",
                    },
                },
                {
                    "name": "Checkout executable repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "repository": "RobloxAPI/rbxapiref",
                        "fetch-depth": 1,
                        "ref": "master",
                        "path": "rbxapiref",
                    },
                },
                {
                    "name": "Print environment",
                    "run": "printenv",
                },
                {
                    "name": "List files",
                    "run": "ls -AlR ~/work",
                },
                {
                    "name": "Generate module",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go mod init github.com/robloxapi/rbxapiref
                    ",
                },
                {
                    "name": "Get dependencies",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go get -v -d ./...
                    ",
                },
                {
                    "name": "Compile executable",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go build -v .
                    ",
                },
                {
                    "name": "Rebuild website",
                    "run": "$GITHUB_WORKSPACE/../../rbxapiref/rbxapiref -s .github/settings.json",
                },
                {
                    "name": "Commit and push website",
                    "env": {
                        "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
                    },
                    "run": "
                        git config user.email 'anaminus@protonmail.com' &&
                        git config user.name 'Anaminus' &&
                        git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git &&
                        git add -A &&
                        git commit -m 'Update reference.' &&
                        git push origin gh-pages ||
                        true
                    ",
                },
                {
                    "name": "Force deploy GitHub Pages",
                    "if": "success()",
                    "env": {
                        "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
                        "PUBLISH_BRANCH": "gh-pages",
                        "PUBLISH_DIR": ".",
                    },
                    "run": "
                        remote_repo='https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git'
                        remote_branch='${PUBLISH_BRANCH}'
                        git init
                        git config user.name '${GITHUB_ACTOR}'
                        git config user.email '${GITHUB_ACTOR}@users.noreply.github.com'
                        git remote set-url origin '${remote_repo}'

                        # push to publishing branch
                        git checkout '${remote_branch}' || git checkout --orphan '${remote_branch}'
                        git add --all
                        timestamp=$(date -u)
                        git commit -m 'Automated deployment: ${timestamp} ${GITHUB_SHA}'
                        git push origin "${remote_branch}" --force
                    ",
                },
            ],
        },
    },
}
