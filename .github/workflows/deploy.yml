{
	"name": "Deploy website",
	"on": {
		"schedule": [{"cron": "19 */6 * * *"}],
		"push": {
			"branches": ["deploy"],
		},
	},
	"jobs": {
		"deploy": {
			"name": "Build and deploy",
			"timeout-minutes": 5,
			"runs-on": "ubuntu-latest",
			"steps": [
				{
					"name": "Print environment",
					"run": "printenv && pwd",
				},
				{
					"name": "Print Go environment",
					"run": "go version && go env",
				},
				{
					"name": "Checkout website repository",
					"uses": "actions/checkout@v1",
					"with": {
						"fetch-depth": 1,
						"ref": "gh-pages",
						"path": "robloxapi.github.io/ref",
					},
				},
				{
					"name": "Checkout documentation repository",
					"uses": "actions/checkout@v1",
					"with": {
						"repository": "RobloxAPI/doc",
						"fetch-depth": 1,
						"ref": "master",
						"path": "doc",
					},
				},
				{
					"name": "Checkout executable repository",
					"uses": "actions/checkout@v1",
					"with": {
						"repository": "RobloxAPI/rbxapiref",
						"fetch-depth": 1,
						"ref": "master",
						"path": "rbxapiref",
					},
				},
				{
					"name": "Generate module",
					"env": {"GOROOT": "/usr/local/go1.13"},
					"run": "
						cd $GITHUB_WORKSPACE/../../rbxapiref &&
						/usr/local/go1.13/bin/go mod init github.com/robloxapi/rbxapiref ||
						true
					",
				},
				{
					"name": "Get dependencies",
					"env": {"GOROOT": "/usr/local/go1.13"},
					"run": "
						cd $GITHUB_WORKSPACE/../../rbxapiref &&
						/usr/local/go1.13/bin/go get -v -d ./...
					",
				},
				{
					"name": "Compile executable",
					"env": {"GOROOT": "/usr/local/go1.13"},
					"run": "
						cd $GITHUB_WORKSPACE/../../rbxapiref/cmd/rbxapiref &&
						/usr/local/go1.13/bin/go build -v .
					",
				},
				{
					"name": "Rebuild website",
					"run": "$GITHUB_WORKSPACE/../../rbxapiref/cmd/rbxapiref/rbxapiref -s .github/settings.json",
				},
				{
					"name": "Commit and push website",
					"env": {
						"ACCESS_TOKEN": "${{ secrets.ACCESS_TOKEN }}",
					},
					"run": "
						git config user.email 'anaminus@protonmail.com' &&
						git config user.name 'Anaminus' &&
						git remote set-url origin https://$GITHUB_ACTOR:$ACCESS_TOKEN@github.com/$GITHUB_REPOSITORY.git &&
						git add -A &&
						git commit -m 'Update reference.' &&
						git push origin gh-pages ||
						true
					",
				},
			],
		},
	},
}
