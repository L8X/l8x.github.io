{
    "name": "Deploy website",
    "on": {
        "schedule": [{"cron": "43 * * * *"}],
    },
    "jobs": {
        "deploy": {
            "name": "Build and deploy",
            "timeout-minutes": 5,
            "runs-on": "ubuntu-latest",
            "steps": [
                {
                    "name": "Check update status",
                    "env": {
                        "ACCESS_TOKEN": "${{ secrets.ACCESS_TOKEN }}",
                    },
                    "run": '
                        ref_repo=ref
                        exe_repo=rbxapiref
                        doc_repo=doc
                        query="{\"query\":\"{\
                        $ref_repo:repository(owner:\\\"RobloxAPI\\\",name:\\\"$ref_repo\\\"){pushedAt}\
                        $exe_repo:repository(owner:\\\"RobloxAPI\\\",name:\\\"$exe_repo\\\"){pushedAt}\
                        $doc_repo:repository(owner:\\\"RobloxAPI\\\",name:\\\"$doc_repo\\\"){pushedAt}}\
                        \"}"
                        echo query: $query
                        result=$(curl -s -H "Authorization: bearer $ACCESS_TOKEN" -X POST -d $query "https://api.github.com/graphql")
                        echo result: $result
                        get_time() {
                            echo $result | jq -r ".data.$1.pushedAt" | { read date; date -u -d $date +%s; }
                        }
                        ref_time=$(get_time $ref_repo)
                        exe_time=$(get_time $exe_repo)
                        doc_time=$(get_time $doc_repo)
                        echo $ref_repo: $ref_time
                        echo $exe_repo: $exe_time
                        echo $doc_repo: $doc_time
                        if [ $exe_time -lt $ref_time ] && [ $doc_time -lt $ref_time ]; then
                            echo "NO UPDATES"
                            exit 1
                        fi
                        echo "UPDATING..."
                    ',
                },
                {
                    "name": "Checkout website repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "fetch-depth": 1,
                        "ref": "gh-pages",
                        "path": "robloxapi.github.io/ref",
                    },
                    "if": "success()",
                },
                {
                    "name": "Checkout documentation repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "repository": "RobloxAPI/doc",
                        "fetch-depth": 1,
                        "ref": "master",
                        "path": "doc",
                    },
                    "if": "success()",
                },
                {
                    "name": "Checkout executable repository",
                    "uses": "actions/checkout@v1",
                    "with": {
                        "repository": "RobloxAPI/rbxapiref",
                        "fetch-depth": 1,
                        "ref": "master",
                        "path": "rbxapiref",
                    },
                    "if": "success()",
                },
                {
                    "name": "Generate module",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go mod init github.com/robloxapi/rbxapiref
                    ",
                    "if": "success()",
                },
                {
                    "name": "Get dependencies",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go get -v -d ./...
                    ",
                    "if": "success()",
                },
                {
                    "name": "Compile executable",
                    "run": "
                        cd $GITHUB_WORKSPACE/../../rbxapiref &&
                        go build -v .
                    ",
                    "if": "success()",
                },
                {
                    "name": "Rebuild website",
                    "run": "$GITHUB_WORKSPACE/../../rbxapiref/rbxapiref -s .github/settings.json",
                    "if": "success()",
                },
                {
                    "name": "Commit and push website",
                    "env": {
                        "ACCESS_TOKEN": "${{ secrets.ACCESS_TOKEN }}",
                    },
                    "run": "
                        git config user.email 'anaminus@protonmail.com' &&
                        git config user.name 'Anaminus' &&
                        git remote set-url origin https://$GITHUB_ACTOR:$ACCESS_TOKEN@github.com/$GITHUB_REPOSITORY.git &&
                        git add -A &&
                        git commit -m 'Update reference.' &&
                        git push origin gh-pages ||
                        true
                    ",
                    "if": "success()",
                },
                {
                    "name": "Fail safely",
                    "run": "true",
                    "if": "failure()",
                },
            ],
        },
    },
}
